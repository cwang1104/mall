// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	product "mall/apps/app/api/internal/handler/product"
	seckill "mall/apps/app/api/internal/handler/seckill"
	user "mall/apps/app/api/internal/handler/user"
	"mall/apps/app/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user_register",
				Handler: user.RegisterHandleHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/front_user_login",
				Handler: user.LoginHandleHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/send_email",
				Handler: user.SendEmailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/admin_login",
				Handler: user.AdminLoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/get_front_users",
				Handler: user.GetUserListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/product_add",
				Handler: product.ProductAddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/get_product_list",
				Handler: product.GetProductListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/product"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/front/seckill",
				Handler: seckill.SeckillHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/front/get_seckill_result",
				Handler: seckill.GetSeckillResHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/seckill"),
	)
}
